<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="winwin.dao.SupportDao">
 	<resultMap type="winwin.dto.SupportBoard" id="Support">
 		<result column="passNo" property="passNo"/>
 		<result column="jobOpenNo" property="jobOpenNo"/>
 		<result column="fileNo" property="fileNo"/>
 		<result column="title" property="title"/>
 		<result column="task" property="task"/>
 		<result column="supportDate" property="supportDate"/>
 		<result column="username" property="username"/>
 		<result column="portfolioId" property="portfolioId"/>
 		<result column="status" property="status"/>
 	</resultMap>
 	
 	<resultMap type="winwin.dto.SupportBoard" id="Result">
		<result column="passNo" property="passNo" />
		<result column="title" property="title" />
		<result column="task" property="task" />
		<result column="supportDate" property="supportDate" />
		<result column="username" property="username" />
		<result column="pass" property="pass" />
		<result column="emailSend" property="emailSend" />
	</resultMap>
 	
 	<sql id="selectSupportBoard">
 		SELECT 
 			sup.passNo, 
 			job.jobOpenNo,
 			mat.fileNo,
 			sup.supportDate, 
 			sup.status, 
 			job.title, 
 			usr.task, 
 			mem.username, 
 			mat.portfolioId 
 		FROM 
 			support sup, jobopenbasic job, userdetail usr, material mat, member mem
 		
 		<where>
	 		sup.jobopenno = job.jobopenno 
	 		AND job.jobopenno = mat.portfolioId 
	 		AND mat.userid = mem.userId
	 		AND usr.userid = mem.userid
	 		
	 		<!-- 경력 ( 신입, 경력 ) -->
			<if test="career != null and career != ''">
				AND job.offer LIKE '%' || #{career} || '%'
			</if> 		
			<!-- 고용형태 -->
			<if test="employment != null and employment != ''">
				AND job.form LIKE '%' || #{employment} || '%'
			</if>
			<!-- 학력 -->
			<if test="academiccareer != null and academiccareer != ''">
				AND job.academic LIKE '%' || #{academiccareer} || '%'
				<!-- 학점 -->
				<choose>
					<when test='"1".equals(academiccareer.toString())'>
						<!-- 석사 이상 -->
						AND TO_NUMBER((SELECT gsc.gstotalscore FROM gschool gsc WHERE gsc.userid = usr.userid)) <![CDATA[>=]]> #{credit}
					</when>
					<when test='"2".equals(academiccareer.toString())'>
						<!-- 대학교 졸업 2~3년 -->
						AND TO_NUMBER((SELECT col.gstotalscore FROM colege col WHERE gsc.userid = usr.userid)) <![CDATA[>=]]> #{credit}
					</when>
					<when test='"3".equals(academiccareer.toString())'>
						<!-- 대학교 졸업 4년 -->
						AND TO_NUMBER((SELECT uni.univtotalscore FROM university uni WHERE uni.userid = usr.userid)) <![CDATA[>=]]> #{credit}
					</when>
				</choose>
			</if>
			
			<!-- 토익 -->
			<if test="score != null and language != ''">
				AND job.language LIKE '%' || #{language} || '%'
			</if>
			<!-- 처리상태 -->
			<if test="score != null and status != ''">
				AND sup.status LIKE '%' || #{status} || '%'
			</if>
			<!-- 공고명 -->
			<if test="title != null and title != ''">
				AND job.title LIKE '%' || #{title} || '%'
			</if>
 		</where>
 	</sql>
 	
 	<select id="list" resultMap="Support" parameterType="map">
 		SELECT * FROM ( SELECT rownum rnum, T.* FROM(
 		<include refid="selectSupportBoard"/>
 		) T ORDER BY passNo DESC ) R WHERE R.rnum BETWEEN #{startNo} AND #{endNo} ORDER BY rnum
 	</select>
 	<select id="totalCnt" resultType="int" parameterType="map">
 		SELECT COUNT(*) CNT FROM (
 		<include refid="selectSupportBoard"/>
 		) CNT	
 	</select>
 	
 	<!-- 상세 정보 호출 -->
 	<select id="detail" resultMap="Support" parameterType="map">
 		SELECT 
 			sup.passNo, 
 			job.jobOpenNo,
 			mat.fileNo,
 			sup.supportDate, 
 			sup.status, 
 			job.title, 
 			usr.task, 
 			mem.username, 
 			mem.userId,
 			mat.portfolioId,
 			usr.eName,
 			usr.birth,
 			usr.zipCode,
 			usr.address,
 			usr.addressDetail,
 			usr.phoneNum,
 			mem.phone,
 			high.hsName,
 			high.hsDay,
 			high.hsMajor,
 			high.hsEndDate,
 			high.hsGraduate,
 			high.hsRegion,
 			mil.discharge,
 			mil.startDate,
 			mil.endDate,
 			mil.mCategory,
 			mil.mGrade,
 			lang.lName,
 			lang.grade,
 			lang.testName,
 			lang.score,
 			lang.lDate,
 			lang.lOrgan
 			
<!--  			col.colName, -->
<!--  			col.colBranch, -->
<!--  			col.colDay, -->
<!--  			col.colMajor, -->
<!--  			col.colScore, -->
<!--  			col.colTotalScore, -->
<!--  			col.colStartDate, -->
<!--  			col.colEndDate, -->
<!--  			col.colTransfer, -->
<!--  			col.colGraduate, -->
<!--  			col.colRegion -->
 			
 			
 		FROM 
 			support sup, jobopenbasic job, userdetail usr, material mat, member mem, 
 			highschool high, military mil, language lang
<!--  			college col -->
 			
 		WHERE
 			sup.jobopenno = job.jobopenno 
	 		AND job.jobopenno = mat.portfolioId 
	 		AND mat.userid = mem.userId
	 		AND usr.userid = mem.userid
	 		AND usr.userid = high.userid
	 		AND usr.userid = mil.userid
	 		AND usr.userid = lang.userid
<!-- 	 		AND usr.userid = col.userid -->
	 		
	 		AND sup.passno = #{passNo}
            AND job.jobopenno = #{jobNo}
            AND mat.fileno = #{fileNo}
 	</select>
 	
 	<sql id="selectResultBoard">
		SELECT
		sup.passNo,
		job.title,
		usr.task,
		sup.supportDate,
		mem.username,
		sup.pass,
		sup.emailSend
		FROM
		support sup, jobopenbasic job, userdetail usr, member mem

		<where>
			sup.jobopenno = job.jobopenno
			AND job.jobopenno = usr.jobopenno
			AND usr.userId = mem.userId
		</where>

	</sql>
	
	<select id="resultlist" resultMap="Result"
		parameterType="winwin.util.Paging">
		SELECT * FROM ( SELECT rownum rnum, T.* FROM(
		<include refid="selectResultBoard" />
		) T ORDER BY passNo DESC ) R WHERE R.rnum BETWEEN #{startNo} AND
		#{endNo} ORDER BY rnum
	</select>

	<select id="resultCnt" resultType="int">
		SELECT COUNT(*) CNT FROM (
		<include refid="selectResultBoard" />
		) CNT
	</select>
	
	<select id="getTitle" resultType="winwin.dto.JobopenBasic">
		SELECT title FROM jobopenbasic
	</select>
 </mapper>